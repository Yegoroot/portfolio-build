{"version":3,"file":"static/js/602.02d7c616.chunk.js","mappings":"gTAgBMA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAElB,cAAGE,MAAH,6KAWIC,GAAuBH,EAAAA,EAAAA,IAAOI,EAAAA,EAAPJ,EAC3B,gBAAGE,EAAH,EAAGA,MAAH,wCACsBA,EAAMG,OAAOC,MAAMC,MAAM,KAD/C,UAKIC,GAAeR,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,EACnB,gBAAGE,EAAH,EAAGA,MAAH,qCACmBA,EAAMQ,QAAQ,GADjC,UA4EF,UAvEA,WACE,OACE,iCACE,SAAC,KAAD,WACE,+CAEF,SAACX,EAAD,WACE,UAAC,IAAD,CAAWY,SAAS,KAApB,WACE,UAAC,IAAD,CAAKC,UAAU,SAAf,WACE,gBACEC,IAAI,MACJC,OAAQ,IACRC,IAAI,mCAEN,SAAC,IAAD,CACEC,QAAQ,KACRC,GAAI,CAAEC,GAAI,GAFZ,2DAMA,SAAC,IAAD,CACEF,QAAQ,KACRG,MAAM,iBACNC,WAAW,SACXH,GAAI,CAAEI,GAAI,GAJZ,qGAUF,SAAC,IAAD,CAAWV,SAAS,KAApB,UACE,UAAC,IAAD,CAAMM,GAAI,CAAEL,UAAW,SAAUU,GAAI,EAAGC,EAAG,GAA3C,WACE,SAAC,IAAD,CACEP,QAAQ,WACRQ,WAAS,EAFX,UAIE,SAACrB,EAAD,CACEsB,KAAK,OACLC,YAAY,uBACZC,cACE,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAACpB,EAAD,CACEQ,QAAQ,YACRa,KAAK,QAFP,sBAQJC,gBACE,SAAC,IAAD,CAAgBF,SAAS,QAAzB,UACE,SAAC,IAAD,WAKR,SAAC,IAAD,CAASX,GAAI,CAAEC,GAAI,GAAnB,iBACA,SAAC,IAAD,CACEa,KAAK,YACLf,QAAQ,WAFV,2C,kJCjGP,SAASgB,EAAoBC,GAClC,OAAOC,EAAAA,EAAAA,GAAqB,UAAWD,IAErBE,E,QAAAA,GAAuB,UAAW,CAAC,SAAvD,I,SCFMC,EAAY,CAAC,YAAa,UAsB1BC,GAAWrC,EAAAA,EAAAA,IAAOsC,EAAAA,EAAO,CAC7BC,KAAM,UACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,OAH9B3C,EAId,WACD,MAAO,CACL4C,SAAU,aAmEd,EAhE0BC,EAAAA,YAAiB,SAAcC,EAASC,GAChE,IAAMN,GAAQO,EAAAA,EAAAA,GAAc,CAC1BP,MAAOK,EACPP,KAAM,YAINU,EAEER,EAFFQ,UADF,EAGIR,EADFS,OAAAA,OAFF,SAIMC,GAAQC,EAAAA,EAAAA,GAA8BX,EAAOL,GAE7CiB,GAAaC,EAAAA,EAAAA,GAAS,GAAIb,EAAO,CACrCS,OAAAA,IAGIK,EAnCkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,EAAAA,EAAAA,GAHO,CACZb,KAAM,CAAC,SAEoBX,EAAqBuB,GA4BlCE,CAAkBJ,GAClC,OAAoBK,EAAAA,EAAAA,KAAKrB,GAAUiB,EAAAA,EAAAA,GAAS,CAC1CL,WAAWU,EAAAA,EAAAA,GAAKJ,EAAQZ,KAAMM,GAC9BW,UAAWV,EAAS,OAAIW,EACxBd,IAAKA,EACLM,WAAYA,GACXF","sources":["content/pages/Status/Status404/index.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  Box,\n  Card,\n  Typography,\n  Container,\n  Divider,\n  Button,\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  styled\n} from '@mui/material'\nimport { Helmet } from 'react-helmet-async'\nimport SearchTwoToneIcon from '@mui/icons-material/SearchTwoTone'\n\nconst MainContent = styled(Box)(\n  // eslint-disable-next-line no-unused-vars\n  ({ theme }) => `\n    height: 100%;\n    display: flex;\n    flex: 1;\n    overflow: auto;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`\n)\n\nconst OutlinedInputWrapper = styled(OutlinedInput)(\n  ({ theme }) => `\n    background-color: ${theme.colors.alpha.white[100]};\n`\n)\n\nconst ButtonSearch = styled(Button)(\n  ({ theme }) => `\n    margin-right: -${theme.spacing(1)};\n`\n)\n\nfunction Status404() {\n  return (\n    <>\n      <Helmet>\n        <title>Status - 404</title>\n      </Helmet>\n      <MainContent>\n        <Container maxWidth=\"md\">\n          <Box textAlign=\"center\">\n            <img\n              alt=\"404\"\n              height={180}\n              src=\"/static/images/status/404.svg\"\n            />\n            <Typography\n              variant=\"h2\"\n              sx={{ my: 2 }}\n            >\n              The page you were looking for doesn't exist.\n            </Typography>\n            <Typography\n              variant=\"h4\"\n              color=\"text.secondary\"\n              fontWeight=\"normal\"\n              sx={{ mb: 4 }}\n            >\n              It's on us, we moved the content to a different page. The search\n              below should help!\n            </Typography>\n          </Box>\n          <Container maxWidth=\"sm\">\n            <Card sx={{ textAlign: 'center', mt: 3, p: 4 }}>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n              >\n                <OutlinedInputWrapper\n                  type=\"text\"\n                  placeholder=\"Search terms here...\"\n                  endAdornment={(\n                    <InputAdornment position=\"end\">\n                      <ButtonSearch\n                        variant=\"contained\"\n                        size=\"small\"\n                      >\n                        Search\n                      </ButtonSearch>\n                    </InputAdornment>\n                  )}\n                  startAdornment={(\n                    <InputAdornment position=\"start\">\n                      <SearchTwoToneIcon />\n                    </InputAdornment>\n                  )}\n                />\n              </FormControl>\n              <Divider sx={{ my: 4 }}>OR</Divider>\n              <Button\n                href=\"/overview\"\n                variant=\"outlined\"\n              >\n                Go to homepage\n              </Button>\n            </Card>\n          </Container>\n        </Container>\n      </MainContent>\n    </>\n  )\n}\n\nexport default Status404\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["MainContent","styled","Box","theme","OutlinedInputWrapper","OutlinedInput","colors","alpha","white","ButtonSearch","Button","spacing","maxWidth","textAlign","alt","height","src","variant","sx","my","color","fontWeight","mb","mt","p","fullWidth","type","placeholder","endAdornment","position","size","startAdornment","href","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined"],"sourceRoot":""}